//  .swift
//  
//
//  Generated by Operahouse using Auth - AuthMenu View Controller
//  Template last updated 2017-11-01
//  Copyright Â© 2017 Apptivity Lab. All rights reserved.
//

import UIKit
import SafariServices

internal class AuthMenuViewController: TimeBaseViewController {
    enum AuthenticationAction {
        case login
        case firstTimeLoginPasswordChange
    }

    var authAction: AuthenticationAction?
    @IBOutlet private var stackviews: [UIStackView]!

    override func viewDidLoad() {
        super.viewDidLoad()

        self.navigationController?.navigationBar.setBackgroundImage(UIImage(), for: .default)
        self.navigationController?.navigationBar.isTranslucent = true

        if self.authAction == .firstTimeLoginPasswordChange {
            let loginVC: LoginViewController = UIStoryboard(name: TimeSelfCareStoryboard.authMenu.filename, bundle: nil).instantiateViewController()
            let changePasswordVC: ChangePasswordViewController = UIStoryboard(name: TimeSelfCareStoryboard.profile.filename, bundle: nil).instantiateViewController()
            self.navigationController?.setViewControllers([
                self,
                loginVC,
                changePasswordVC
                ], animated: false)
        }
    }

    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        var delay: TimeInterval = 0
        let offset : CGFloat = 50
        for stackView in stackviews {

            stackView.frame = CGRect(origin: CGPoint(x: stackView.frame.origin.x, y: stackView.frame.origin.y + offset), size: stackView.frame.size)
            stackView.alpha = 0

            UIView.animate(withDuration: 0.5, delay: delay, animations: {
                stackView.frame = CGRect(origin: CGPoint(x: stackView.frame.origin.x, y: stackView.frame.origin.y - offset), size: stackView.frame.size)
                stackView.alpha = 1
            })
            delay += 0.15
        }
    }

    @IBAction func showSignUpPlans(_ sender: Any) {
        let url = URL(string: "https://www.time.com.my/personal/broadband/fibre-broadband")! // swiftlint:disable:this force_unwrapping
        self.showSafariController(with: url)
    }

    private func showSafariController(with url: URL) {
        let safariController = SFSafariViewController(url: url)
        safariController.preferredControlTintColor = .primary

        self.present(safariController, animated: true, completion: nil)
    }
}
